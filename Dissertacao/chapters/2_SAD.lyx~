#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\options a4paper,titlepage
\use_default_options false
\maintain_unincluded_children false
\language brazilian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 4cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes true
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
A Visualização/Edição de Ontologia não é um tema novo e um certo número
 de abordagens se tornaram disponíveis nos últimos anos.
 Algumas já estão bem estabelecidas, particularmente no campo da modelagem
 de ontologias.
 Em outras áreas da engenharia de ontologias, como alinhamento de ontologias
 e depuração, embora várias ferramentas tenham sido recentemente desenvolvidas,
 poucas fornecem uma interface gráfica do usuário, para não mencionar ajudas
 à navegação ou técnicas de visualização e interação abrangentes.
\end_layout

\begin_layout Standard
Não há uma solução única, mas diferentes casos de uso que exigem diferentes
 técnicas de visualização e interação.
 Em última análise, proporcionando melhores interfaces de usuário, representaçõe
s visuais e técnicas de interação irá promover o envolvimento dos usuários
 e, provavelmente, conduzem a resultados de maior qualidade em diferentes
 aplicações que empregam ontologias e assim, proliferar o consumo de dados
 vinculados.
\end_layout

\begin_layout Section
Sistemas de Apoio a Decisão
\end_layout

\begin_layout Standard
A construção de sistemas que sejam capazes de fornecer um suporte ao gestor
 em um processo de tomada de decisões vem sendo um desafio ao longo dos
 anos.
 Sistemas de Apoio a Decisão (SAD) 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "SAD"
description "Sistemas de Apoio a Decisão"

\end_inset

 são sistemas que possuem meios que auxiliam a comparação, analise e apoio
 para escolha de alternativas num processo de decisão.
 Isso é feito usando metodologias feitas por especialistas da área em questão
 
\begin_inset CommandInset citation
LatexCommand citep
key "heinzle2010semantica"

\end_inset

.
\end_layout

\begin_layout Standard
SADs auxiliam tomadores de decisão dando-lhes um maior entendimento do domínio.
 Eles combinam as habilidades dos especialistas (humanos) à capacidade dos
 computadores de acessar uma vasta quantidade de dados, desenvolver modelos,
 interpretar, formular e avaliar alternativas e cenários distintos onde
 podem haver possíveis soluções para os problemas que se quer solucionar
 
\begin_inset CommandInset citation
LatexCommand citep
key "lu2006application"

\end_inset

.
\end_layout

\begin_layout Standard
O autor 
\begin_inset CommandInset citation
LatexCommand citet
key "junior2006sistemas"

\end_inset

 cita algumas vantagens de SADs:
\end_layout

\begin_layout Itemize
Manuseio de extensos volumes de dados: estes sistemas permitem a utilização
 de grandes volumes de dados para analisar resultados;
\end_layout

\begin_layout Itemize
Captação de dados de várias fontes: SADs tem a capacidade de obter dados
 externos e integra-los a dados já existentes;
\end_layout

\begin_layout Itemize
Flexibilidade na geração de relatórios: sistemas desse tipo podem exibir
 relatórios e/ou resultados da forma que ficar melhor ao tomador de decisões;
\end_layout

\begin_layout Itemize
Solução de Problemas: tem-se a capacidade de encontrar melhores soluções
 em problemas simples e encontrar soluções viáveis em problemas complexos;
\end_layout

\begin_layout Itemize
Execução de simulações: um SAD pode fazer modificações teóricas nos dados
 e observar os impactos que isso causa nos resultados;
\end_layout

\begin_layout Itemize
Suporte a todos os níveis de tomada de decisões: esse tipo de sistema pode
 auxiliar em todos os níveis de tomada de decisões dentro de uma organização.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../figures/SAD.jpeg
	lyxscale 90
	width 100col%
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Componentes de um SAD 
\begin_inset CommandInset citation
LatexCommand citep
key "junior2006sistemas"

\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fig:Componentes-SAD"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Componentes-SAD"

\end_inset

 mostra os componentes de um SAD.
 Eles podem ser divididos em bancos de dados, banco de modelos e sistema
 de geração de relatórios.
 O banco de modelos armazena os vários modelos que auxiliam a criação de
 cenários para a tomada de decisões.
 Comparado com outras técnicas de criação de cenários (como sistemas especialist
as), o uso de bancos de modelos são vantajosos, pois são menos dispendiosos
 e mais rápidos de implementar.
 É importante também que os bancos de dados sejam mantidos atualizados para
 um resultado confiável.
\end_layout

\begin_layout Subsection
Arquitetura para Sistemas de Apoio a Decisão
\end_layout

\begin_layout Standard
A arquitetura de um software define a organização em termos de seus componentes,
 suas interconexões, suas interações e também suas principais propriedades
 
\begin_inset CommandInset citation
LatexCommand citep
key "de1997software"

\end_inset

.
 Ela fornece as informações de como os elementos envolvidos nela se relacionam.
 Arquiteturas trabalham a parte externa das ligações entre seus elementos,
 implementações internas desses elementos não são considerados arquiteturais
 
\begin_inset CommandInset citation
LatexCommand citep
key "sei2006architecture"

\end_inset

.
\end_layout

\begin_layout Standard
SADs são criados por especialistas nas áreas de domínio nas quais eles serão
 aplicados e implementados por programadores.
 Esse pode ser um processo lento e custoso, já que os dois grupos de profissiona
is têm 
\emph on
backgrounds
\emph default
 diferentes e vão ter problemas de comunicação durante o processo de criação
 e testes de um SAD.
 Esses profissionais podem ser até de organizações diferentes, o que dificulta
 ainda mais o processo.
 Devido ao fato de que os elementos básicos de todo o SAD (Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Componentes-SAD"

\end_inset

) serem muito parecidos, é possível criar uma arquitetura que possa ser
 re\SpecialChar nobreakdash
usada em diferentes SADs (ou classes de SADs).
 Esta arquitetura pode ser baseada em componentes de software re\SpecialChar nobreakdash
usáveis.
 Programadores podem usar essa arquitetura e re\SpecialChar nobreakdash
usar os componentes de software,
 já desenvolvidos para ela, para implementar SADs mais rapidamente.
\end_layout

\begin_layout Standard
Para encontrar e configurar componentes de software de uma arquitetura,
 uma opção é descrever esses componentes, usando uma ontologia, e usar os
 termos dessa ontologia para encontrar os componentes corretos para uma
 aplicação 
\begin_inset CommandInset citation
LatexCommand citep
key "Linhalis2010"

\end_inset

.
 Essas ontologias podem ser criadas utilizando linguagens padrões da Web
 Semântica, como a Web Ontology Language (OWL
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "OWL"
description "Web Ontology Language"

\end_inset

), para melhor portabilidade 
\begin_inset CommandInset citation
LatexCommand citep
key "Pahl2007"

\end_inset

.
 Ontologias e padrões da Web Semântica serão abordados com mais profundidade
 no próximo capítulo.
\end_layout

\begin_layout Standard
Ontologias, que descrevam componentes de software para serem usados num
 SAD de um determinado domínio, terão uma grande quantidade de termos derivados
 desse domínio.
 Especialistas desse domínio terão familiaridade com esses termos e poderão
 especificar grande parte do fluxo de trabalho do SAD usando esses termos.
 Idealmente, essa especificação deve ser detalhada o suficiente para que
 programadores possam desenvolver a parte computacional do SAD sem necessidade
 de mais feedback dos especialistas.
\end_layout

\begin_layout Standard
Como especialistas de domínio não têm um conhecimento muito detalhado sobre
 linguagens de especificação de sistemas, é necessário o desenvolvimento
 de uma Domain Specific Language (DSL) adequada ao nível de conhecimento
 de computação dos especialistas.
 Essa linguagem também deve conter termos familiares ao domínio desses especiali
stas.
 
\end_layout

\begin_layout Section
Web Semântica
\end_layout

\begin_layout Standard
A web foi criada para possibilitar o acesso, intercâmbio e recuperação de
 informações de maneira rápida e simples, seu crescimento exponencial e
 caótico fez com que a mesma se tornasse hoje um gigantesco repositório
 de documentos, o que dificulta a recuperação de informações.
 Até o momento, não existe nenhuma estratégia abrangente e satisfatória
 para a indexação de documentos por meio de “motores de busca” que seja
 coerente com uma estrutura linguística.
 
\begin_inset CommandInset citation
LatexCommand citet
key "Souza:2004"

\end_inset

 Com o intuito de preencher esse gargalo semântico na busca por informações,
 surge a web semântica.
 Ela tem como objetivo incorporar significado às informações presentes na
 web, criando um ambiente onde agentes de software e usuários possam trabalhar
 de forma cooperativa e entender o significado (sentido) presente nos dados.
 
\begin_inset CommandInset citation
LatexCommand citet
key "brandao2002introduccao"

\end_inset

Um exemplo da deficiência da web atual pode ser identificada na busca realizada
 pelos sistemas de recuperação de informação, que usam palavras-chave nas
 buscas,onde apenas a similaridade e o número de ocorrências de certas palavras
 no conteúdo de documentos são levados em consideração e não a semântica
 presente naquela informação.
 
\begin_inset CommandInset citation
LatexCommand citet
key "Souza:2004"

\end_inset


\end_layout

\begin_layout Standard
Segundo a definição feita do W3C
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.w3.org/2001/sw
\end_layout

\end_inset

, a web semântica é um framework que permite compartir e reutilizar dados
 através das fronteiras das aplicações, empresas e comunidades.
 Ela tem duas funcionalidades principais: 
\end_layout

\begin_layout Standard
a) ser um conjunto de formatos para a integração e combinação de dados extraídos
 de diversas fontes, e; 
\end_layout

\begin_layout Standard
b) estabelecer uma linguagem para registrar como esses dados se referem
 a objetos do mundo real.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../figures/HistoriaWebSemantica.jpg
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
História da Web Semântica
\begin_inset CommandInset label
LatexCommand label
name "fig:HistoriaWebSemantica"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A web semântica é formada por um conjunto de padrões propostos pelo World
 Wide Web Consortium (W3C).
 Eles evoluíram de padrões focados na representação de dados para a de conhecime
nto.
 Na 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:HistoriaWebSemantica"

\end_inset

 podem ser observados os padrões que constituem a Web Semântica e sua relação
 com os padrões XML.
 Eles promovem formatos de dados comuns na WWW e também a inclusão de conteúdo
 Semântico na web, usando o padrão Resource Description Framework (RDF).
\end_layout

\begin_layout Section
Linked Data/Linked Open Data
\end_layout

\begin_layout Standard
O conceito de Linked Data pode ser definido como um conjunto de boas práticas
 para publicar e conectar conjuntos de dados estruturados na Web, com o
 intuito de criar uma "Web de Dados" (Bizer et al., 2006).
 Sua fundamentação prática está ligada a tecnologias web, como HTTP (Hypertext
 Transfer Protocol) e URI (Uniform Resource Identifier), com o objetivo
 de permitir a leitura dos dados conectados, de forma automática, por softwares
 especificos.
 A utilização de padrões de Linked Data, permitem que sejam publicados dados
 de forma que possam ser lidos por pessoas e processados por máquinas.
 Esta área surgiu em 2006, com a publicação do documento Disgn Issues (Berners-L
ee, 2006), na qual tem uma subseção de Web Semântica exclusiva para Linked
 Data.
 É importante deixar claro, que Linked Data, não necessariamente precisam
 ser abertos, por isso, visando deixar de forma bastante clara, foi proposto
 o "Sistema de 5 Estrelas", que é um sistema que classifica por meio de
 estrelas o grau de abertura dos dados, conforme mostrado na Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:5_estrelas"

\end_inset

.
 Quanto mais aberto, maior é o numero de estrelas para os dados e mais facilment
e pode ser enriquecido (conectado).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../figures/5_estrelas.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Esquema de implementação das 5 estrelas propostos por Tim Berners-Lee
\begin_inset CommandInset label
LatexCommand label
name "fig:5_estrelas"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Na presença de uma enorme rede de recursos interligados na web, chamada
 de Linked Open Data (LOD), um dos desafios enfrentados pela comunidade
 é a visualização de conjuntos de dados multidimensionais para proporcionar
 uma visão geral eficiente.
 Com o foco passando de uma Web de documentos para uma Web de dados, mudanças
 nos paradigmas de interação estão em demanda também.
 Essas novas abordagens também precisam levar em consideração os desafios
 tecnológicos e oportunidades dadas por novos contextos de interação, por
 exemplo, toque e interação gestual.
\end_layout

\begin_layout Section
Resource Description Framework (RDF)
\end_layout

\begin_layout Standard
O Resource Description Framework (RDF) é uma família de especificações da
 W3C, que foi disponibilizada em 1999 como parte do W3C Semantic Web Effort
 
\begin_inset CommandInset citation
LatexCommand citet
key "Gruber1995"

\end_inset

.
 Ele foi originalmente projetado como um modelo de meta-dados e também chegou
 a ser usado como um método de descrições conceituais, principalmente para
 descrever recursos web.
 O RDF é usado em várias áreas de aplicação, como resource discovery para
 melhorar as capacidades dos motores de busca, cataloging para descrever
 o conteúdo e as relações de conteúdo disponibilizados em um sistema web
 particular, e descrição de intellectual property rights de páginas web.
 O modelo básico de dados consiste em um padrão de três tipos de objetos:
 
\end_layout

\begin_layout Standard

\series bold
Sujeito:
\series default
 representa os recursos e são identificados por meio de URIs, sem importar
 o tamanho deles, por exemplo, uma pagina web ou um elemento HTML podem
 ser recursos.
\end_layout

\begin_layout Standard

\series bold
Predicado:
\series default
 são aspectos, características, atributos ou relações especificas que describem
 o sujeito, cada predicado têm um significado especifico e relaciona um
 sujeito com um objeto.
\end_layout

\begin_layout Standard

\series bold
Objeto:
\series default
 um recurso especifico ou valor da propriedade que representa uma característica
s do objeto
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.w3.org/TR/PR-rdf-syntex/
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Com RDF é possível explicitar relações entre dois objetos (usando-se uma
 Tripla RDF), mas não muito mais que isso.
 Para se descrever o que um objeto representa e suas relações com outros
 objetos, são necessárias ontologias.
\end_layout

\begin_layout Subsection
Resource Description Framework Schema (RDFs)
\end_layout

\begin_layout Standard
A RDF Schema 
\begin_inset CommandInset citation
LatexCommand citet
key "Brickley2000"

\end_inset

 é responsável por prover mecanismos para declaração dessas propriedades.
 Um esquema não define somente as propriedades dos recursos, mas também
 os tipos de recursos que estão sendo descritos.
 Pode ser entendido como uma espécie de dicionário onde são definidos os
 termos que serão utilizados em declarações RDF.
 A especificação da RDF Schema do W3C fornece os mecanismos necessários
 à definição de elementos, de classes de recursos, de possíveis restrições
 de classes e relacionamentos e detecção de violação de restrições.
 
\end_layout

\begin_layout Standard

\series bold
Escopo.

\series default
 A especificação da RDF Schema foi diretamente pensada levando em consideração
 problemas específicos e imediatos.
 Seus criadores esperam que outros problemas futuros compartilhem característica
s parecidas e que assim seja possível usar as classes básicas já projetadas.
 Os problemas em questão são: PICS (Platform for Internet Content Selection),
 os metadados simples da Web, mapa de sites e outras ferramentas de navegação
 e P3P (Platform for Privacy Preferences Project), descritos a seguir: 
\end_layout

\begin_layout Standard
• PICS.
 O modelo e sintaxe RDF é adequado para representar rótulos de PICS, que
 foi originalmente desenvolvido para ajudar pais e professores a controlar
 o que as crianças acessam na Internet, além de facilitar outros usos de
 rótulos, incluindo assinatura de código e privacidade.
 A RDF Schema, no entanto, não fornece um mapeamento de propósito geral
 de sistemas de avaliação de PICS dentro de uma representação de RDF.
 
\end_layout

\begin_layout Standard
• Metadados simples da Web.
 Uma aplicação óbvia da RDF está na descrição de páginas da Web.
 Essa é uma das funções básicas da iniciativa Dublin Core.
 O Dublin Core 
\begin_inset CommandInset citation
LatexCommand citet
key "DCMIPro841"

\end_inset

 é um conjunto de 15 elementos largamente aplicáveis para descrever recursos
 da Web para habilitar sua descoberta.
 
\end_layout

\begin_layout Standard
• Mapa de sites e outras ferramentas de navegação.
 A especificação da RDF Schema fornece recursos suficientes para criar modelos
 RDF que representam sistemas hierárquicos para representar taxonomia de
 assuntos.
 Mapas de sites, dicionários e esquemas de classificação de bibliotecas
 são exemplos bem conhecidos de sistemas hierárquicos.
 
\end_layout

\begin_layout Standard
• P3P.
 A plataforma Projeto de Preferências de Privacidade requer uma gramática
 para construção de declarações sobre práticas de coleção de dados e preferência
s pessoais como exercício sobre estas práticas, assim como uma sintaxe de
 dados estruturados de troca.
 O uso de um esquema de metadados para descrever a estrutura formal de descrição
 de práticas de privacidade permitirá privacidade na prática de dados para
 serem utilizados junto com outros metadados em uma consulta durante descoberta
 de recurso, e permitirá a um agente de software agir de acordo com a privacidad
e dos metadados usando as mesmas técnicas como utilizadas para outros metadados
 descritivos.
 
\end_layout

\begin_layout Standard

\series bold
Convenções.

\series default
 (a) Nomes de Classe têm a primeira letra maiúscula (Ex: rdfs:Resource);
 (b) Palavras adicionais ao nome de classe são também maiúsculas (Ex: rdfs:Const
raintProperty); (c) Nomes de propriedades não têm a primeira letra não maiúscula
 (Ex: rdfs:domain); e (d) Palavras adicionais ao nome são maiúsculas (Ex:
 rdfs:subClassOf).
 
\end_layout

\begin_layout Standard

\series bold
Restrições.

\series default
 A RDF Schema serve também para especificar restrições visando um modelo
 RDF consistente.
 Exemplo de restrições são rdfs:domain e rdfs:range que se refere a propriedades
 de uso e a regra que rdfs:subPropertyOf e rdfs:subClassOf não devem formar
 laços.
 A RDF Schema usa as propriedades de restrição para definir como suas propriedad
es podem ser utilizadas
\end_layout

\begin_layout Section
Ontologia
\end_layout

\begin_layout Standard
A Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Niveis-de-Representação"

\end_inset

 mostra os níveis de representação de dados na forma de conhecimento processável
 por máquinas.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../figures/SmartDataContinuum.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\lang english
Niveis de Representação de Dados na forma de conhecimento processável por
 máquinas 
\begin_inset CommandInset label
LatexCommand label
name "fig:Niveis-de-Representação"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
O nível mais baixo de representação começa com os dados sem nenhum significado
 semântico, dependentes do contexto da aplicação.
 O segundo nível envolve a definição de esquemas XML para conseguir independênci
a dos dados da aplicação, os dados fluem entre aplicações em um único domínio
 mas não podem ser compartilhados fora do domínio.
 No terceiro nível, os dados podem ser combinados a partir de diferentes
 domínios, sendo suficientemente independentes para serem recuperados e
 combinados com outras fontes de dados.
 Finalmente no quarto nível, é possível inferir novos dados a partir dos
 existentes e compartilha-los entre aplicações sem requerer interferência
 humana 
\begin_inset CommandInset citation
LatexCommand citet
key "Sugumaran2011"

\end_inset

, isso é possível graças as ontologias que descrevem esses dados.
 
\end_layout

\begin_layout Standard
Uma ontologia é um sistema de organização e representação do conhecimento,
 em inglês 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "KOS"
description "Knowledge Organization System"

\end_inset

, que é uma estrutura conceitual e computacional que permite representar
 o conhecimento, de qualquer domínio, por meio de entidades, classificações,
 relações semânticas, regras e axiomas.
\end_layout

\begin_layout Standard
Contudo, não existe um consenso sobre uma exata definição para ontologias.
 Segundo 
\begin_inset CommandInset citation
LatexCommand citet
key "gruber1995toward"

\end_inset

, uma ontologia é "uma especificação explícita de uma conceitualização que
 representa o entendimento comum e a terminologia relevante de um domínio".
\end_layout

\begin_layout Standard
Uma ontologia é especificada por meio de componentes básicos que são as
 classes, relações, axiomas e instâncias.
 As classes, o foco da maioria das ontologias, são utilizadas para descrever
 os conceitos de um domínio, possibilitando a organização das classes em
 um sistema lógico e hierárquico contendo subclasses que representam conceitos
 mais específicos 
\begin_inset CommandInset citation
LatexCommand citet
key "noy2001ontology"

\end_inset

.
 As relações representam o tipo de interação entre os conceitos de um domínio
 e as propriedades presentes nas classes e indivíduos.
 Elas podem ter características próprias, como serem transitivas, simétricas,
 ou terem uma cardinalidade definida.
 Os axiomas são utilizados para modelar regras assumidas como verdadeiras
 no domínio em questão, de modo que seja possível associar o relacionamento
 entre os indivíduos, além de fornecer características descritivas e lógicas
 para os conceitos.
 Para 
\begin_inset CommandInset citation
LatexCommand citet
key "uschold1996ontologies"

\end_inset

 os axiomas são especificados para definir a semântica e significado dos
 termos (classes e propriedades) e sugerem que a fase de definição dos axiomas
 (especificação da ontologia) é a mais difícil na construção de ontologias.
 Por fim, os indivíduos, ou instâncias das classes, são utilizados para
 representar elementos específicos, ou seja, os próprios dados, que, juntamente
 com a definição de uma ontologia, constituem a base de conhecimento 
\begin_inset CommandInset citation
LatexCommand citet
key "noy2001ontology"

\end_inset

.
\end_layout

\begin_layout Section
Web Ontology Language
\end_layout

\begin_layout Standard
A Web Ontology Language (OWL) foi recomendada pelo W3C em 2004 para representar
 e compartilhar ontologias na Web.
 Essa linguagem foi projetada para aplicações que necessitam processar o
 conteúdo da informação em vez de apenas apresentar informações em nós 
\begin_inset CommandInset citation
LatexCommand citet
key "McGuinness2004"

\end_inset

.
 OWL é uma linguagem que permite que semântica seja explicitamente associada
 ao conteúdo dos dados na web e formalmente especificada através de ontologias,
 compartilhadas na Internet.
\end_layout

\begin_layout Standard
A OWL 2, de abril de 2008, é a versão mais recente da linguagem 2.
 De acordo com as especificações do W3C
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.w3.org/TR/owl2-overview
\end_layout

\end_inset

, a OWL 2 adicionou três novos perfis (sub-linguagens) aos perfis DL e Full
 já existentes: OWL 2 EL, OWL 2 QL e OWL RL 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Perfis-da-OWL"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../figures/owl2-profiles.png
	width 100col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Perfis da OWL
\begin_inset CommandInset label
LatexCommand label
name "fig:Perfis-da-OWL"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

Cada um desses perfis oferece um poder de expressividade diferente para
 diversos cenários de aplicação:
\end_layout

\begin_layout Standard

\series bold
FULL:
\series default
 É direcionado para usuários que querem a máxima expressividade e a liberdade
 sintática do RDF sem nenhuma garantia computacional.
 É improvável que qualquer software de raciocínio seja capaz de suportar
 completamente cada recurso da OWL Full 
\begin_inset CommandInset citation
LatexCommand citet
key "McGuinness2004"

\end_inset

.
\end_layout

\begin_layout Standard

\series bold
DL (Description Logic):
\series default
 É para aplicações que necessitam de máxima expressividade, enquanto mantém
 a computabilidade (todas as conclusões são garantidos para ser computáveis)
 e decidibilidade (todas as computações terminarão em tempo finito) 
\begin_inset CommandInset citation
LatexCommand citet
key "McGuinness2004"

\end_inset

.
 O OWL DL inclui todas as construções da linguagem OWL, mas elas podem ser
 usadas somente sob certas restrições.
\end_layout

\begin_layout Standard

\series bold
EL:
\series default
 É baseado na família EL++ de lógica descritiva (Description Logic), esse
 perfil é particularmente útil em aplicações utilizando ontologias que contêm
 um grande número de propriedades e/ou classes.
 Além disso, o OWL 2 EL utiliza um padrão comum utilizado em ontologias
 para conceitos e planejamento, ou seja, a combinação de conjunção e qualidades
 existenciais.
\end_layout

\begin_layout Standard

\series bold
QL:
\series default
 É baseado na família DL-Lite de lógica descritiva.
 Esse perfil foi criado para permitir o raciocínio (reasoning) eficiente
 com grandes quantidades de dados estruturados de acordo com esquemas relativame
nte simples.
 Ele fornece a maioria dos recursos necessários para capturar modelos conceituai
s, tais como diagramas de classe UML, diagramas de Entidade de Relacionamento,
 e esquemas de banco de dados.
 
\end_layout

\begin_layout Standard

\series bold
RL:
\series default
 É voltado para aplicações que exigem raciocínio escalável em troca de alguma
 restrição de poder expressivo.
 Ele define um subconjunto sintático de OWL 2 que favorece a implementação
 utilizando tecnologias baseadas em regras.
 Esse perfil pode ser utilizado na maioria das construções OWL 2, porém,
 para permitir implementações baseadas em regras de raciocínio, a forma
 como essas construções podem ser usadas em axiomas foi restringida.
\end_layout

\begin_layout Standard
Em um Sistema de Apoio a Decisão (SAD), ontologias podem ser usadas para
 modelar o domínio da aplicação deste sistema, no caso do SustenAgro, além
 deste caso, é utilizado também para a elaboração de interfaces de usuário,
 permitindo assim um maior controle dos dados obtidos.
\end_layout

\begin_layout Section
Embrapa
\end_layout

\begin_layout Standard
A Embrapa é uma Empresa Brasileira de Pesquisas Agropecuárias, que foi criada
 em abril de 1973, com vinculo ao Ministério da Agricultura, Pecuária e
 Abastecimento.
 Com pesquisas na área de Agropecuária e parceiros como o Sistema Nacional
 de Pesquisa Agropecuária (SNPA), desenvolveu um modelo de agricultura e
 pecuária tropical especificamente para o brasil, superando as barreiras
 que limitavam a produção de alimentos, fibras e energia em nosso País.
 Com a construção do conhecimento em conjunto com os diversos segmentos
 do setor, promove a sustentabilidade da agricultura brasileira, com respeito
 à diversidade ambiental, étnica e cultural.
 Com foco em inovação, seus trabalhos são direcionados para antecipar cenários
 e soluções.
 Neste sentido foi desenvolvido em conjunto com a USP de São Carlos, o software
 SustenAgro, que visa trazer de forma automatizada as informações sobre
 sustentabilidade da cultura de cana-de-açucar.
\end_layout

\end_body
\end_document
